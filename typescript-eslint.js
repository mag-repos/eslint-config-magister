module.exports = {
  rules: {
    "@typescript-eslint/adjacent-overload-signatures": "warn",
    "@typescript-eslint/array-type": [
      "error",
      {
        default: "array",
      },
    ],
    "@typescript-eslint/await-thenable": "warn",
    "@typescript-eslint/ban-ts-comment": "warn",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        types: {
          Object: {
            message: "Use {} instead.",
          },
          String: null,
          Array: null,
          Number: null,
        },
      },
    ],
    "@typescript-eslint/class-literal-property-style": "warn",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        assertionStyle: "as",
        objectLiteralTypeAssertions: "never",
      },
    ],
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        accessibility: "explicit",
        overrides: {
          accessors: "explicit",
          constructors: "explicit",
          methods: "explicit",
          properties: "explicit",
          parameterProperties: "explicit",
        },
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/member-delimiter-style": [
      "warn",
      {
        multiline: {
          delimiter: "semi",
          requireLast: true,
        },
        singleline: {
          delimiter: "semi",
          requireLast: false,
        },
      },
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        default: {
          memberTypes: [
            "public-static-field",
            "private-static-field",
            "public-decorated-field",
            "protected-decorated-field",
            "private-decorated-field",
            "protected-static-field",
            "public-instance-field",
            "public-abstract-field",
            "protected-instance-field",
            "protected-abstract-field",
            "private-instance-field",
            "static-field",
            "public-field",
            "instance-field",
            "protected-field",
            "private-field",
            "abstract-field",
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",
          ],
        },
      },
    ],
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        selector: "default",
        format: ["camelCase"],
      },
      {
        selector: ["function"],
        format: ["camelCase"],
        leadingUnderscore: "allow",
      },
      {
        selector: ["variable"],
        format: ["camelCase", "UPPER_CASE"],
        leadingUnderscore: "allow",
      },
      {
        selector: "parameter",
        format: ["camelCase"],
        leadingUnderscore: "allow",
      },

      {
        selector: "memberLike",
        modifiers: ["private"],
        format: ["camelCase"],
        leadingUnderscore: "allow",
      },
      {
        selector: "typeLike",
        format: ["PascalCase"],
      },
      {
        selector: "typeProperty",
        format: ["camelCase"],
        leadingUnderscore: "allow",
      },
      {
        selector: "objectLiteralProperty",
        format: ["camelCase"],
        leadingUnderscore: "allow",
      },
      {
        selector: "enumMember",
        format: ["PascalCase"],
      },
    ],
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "warn",
    "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extraneous-class": [
      "warn",
      {
        allowWithDecorator: true,
      },
    ],
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-for-in-array": "warn",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        ignoreParameters: false,
        ignoreProperties: false,
      },
    ],
    "@typescript-eslint/no-invalid-void-type": "warn",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-misused-new": "warn",
    "@typescript-eslint/no-misused-promises": "warn",
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-namespace": "warn",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/parameter-properties": [
      "error",
      { allow: ["private readonly", "public readonly"] },
    ],
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "warn",
    "@typescript-eslint/no-this-alias": "warn",
    "@typescript-eslint/no-type-alias": [
      "warn",
      {
        allowAliases: "always",
        allowCallbacks: "always",
        allowConditionalTypes: "always",
        allowConstructors: "always",
        allowLiterals: "in-unions-and-intersections",
        allowMappedTypes: "always",
        allowTupleTypes: "always",
        allowGenerics: "always",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "warn",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "warn",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/no-useless-template-literals": "error",
    "@typescript-eslint/no-var-requires": "warn",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-enum-initializers": "warn",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-literal-enum-member": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": "warn",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": [
      "warn",
      { ignoreStringArrays: true },
    ],
    "@typescript-eslint/restrict-plus-operands": "warn",
    "@typescript-eslint/restrict-template-expressions": "warn",
    "@typescript-eslint/strict-boolean-expressions": "warn",
    "@typescript-eslint/switch-exhaustiveness-check": "warn",
    "@typescript-eslint/triple-slash-reference": [
      "warn",
      {
        path: "never",
        types: "never",
        lib: "never",
      },
    ],
    "@typescript-eslint/type-annotation-spacing": "warn",
    "@typescript-eslint/typedef": "warn",
    "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
    "@typescript-eslint/unbound-method": [
      "error",
      {
        ignoreStatic: true,
      },
    ],
    "@typescript-eslint/unified-signatures": "warn",
    "@typescript-eslint/sort-type-constituents": "error",

    // ESLint rules
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "warn",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "warn",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { argsIgnorePattern: "^_", destructuredArrayIgnorePattern: "^_" },
    ],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "warn",
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": [
      "warn",
      "all",
      {
        nestedBinaryExpressions: false,
        enforceForArrowConditionals: false,
      },
    ],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "warn",
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": "error",
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "warn",
    "no-implied-eval": "off",
    "@typescript-eslint/no-implied-eval": "warn",
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "error",
    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": "warn",
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": "warn",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "warn",
      {
        ignoreEnums: true,
        ignoreNumericLiteralTypes: true,
        ignoreReadonlyClassProperties: true,
        ignore: [-1, 0, 1],
        ignoreArrayIndexes: false,
        enforceConst: true,
        detectObjects: false,
      },
    ],
    "no-return-await": "off",
    "@typescript-eslint/return-await": "error",
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "warn",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "warn",
    "require-await": "off",
    "@typescript-eslint/require-await": "warn",
    "init-declarations": "off",
    "@typescript-eslint/init-declarations": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "warn",
      {
        hoist: "all",
      },
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "warn",
    "brace-style": "off",
    "@typescript-eslint/brace-style": "warn",
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": ["warn", "always-multiline"],
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": "warn",
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": "warn",
    indent: "off",
    "@typescript-eslint/indent": [
      "warn",
      4,
      {
        SwitchCase: 1,
        ArrayExpression: 1,
      },
    ],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": "warn",
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": "warn",
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    quotes: "off",
    "@typescript-eslint/quotes": ["warn", "double"],
    semi: "off",
    "@typescript-eslint/semi": ["warn", "always"],
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": [
      "warn",
      {
        anonymous: "always",
        named: "never",
        asyncArrow: "always",
      },
    ],
    "space-infix-ops": "off",
    "@typescript-eslint/space-infix-ops": "warn",
    "no-duplicate-imports": "off",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "warn",
    "object-curly-spacing": "off",
    "@typescript-eslint/object-curly-spacing": ["warn", "always"],
    "prefer-destructuring": "off",
    "@typescript-eslint/prefer-destructuring": "off",
    "consistent-return": "off",
    "@typescript-eslint/consistent-return": "error",
    "prefer-promise-reject-errors": "off",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "class-methods-use-this": "off",
    "@typescript-eslint/class-methods-use-this": "warn",
    "lines-around-comment": "off",
    "@typescript-eslint/lines-around-comment": "error",
    "key-spacing": "off",
    "@typescript-eslint/key-spacing": "error",
    "space-before-blocks": "off",
    "@typescript-eslint/space-before-blocks": "error",
    "no-restricted-imports": "off",
    "@typescript-eslint/no-restricted-imports": "error",
    "padding-line-between-statements": "off",
    "@typescript-eslint/padding-line-between-statements": "error",
  },
};
